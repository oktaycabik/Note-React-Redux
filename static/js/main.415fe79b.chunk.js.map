{"version":3,"sources":["redux/note/noteSlice.js","InputText.js","Note.js","App.js","redux/store.js","reportWebVitals.js","index.js"],"names":["noteSlice","createSlice","name","initialState","note","content","color","reducers","addNewNote","state","data","push","payload","actions","filterNote","InputText","useState","takenote","settakenote","cols","setcols","dispatch","useDispatch","onSubmit","e","preventDefault","style","height","className","type","value","onChange","target","id","htmlFor","backgroundColor","width","Note","not","App","useSelector","filter","setfilter","filtered","toLowerCase","includes","xs","placeholder","map","key","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.415fe79b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const noteSlice = createSlice({\r\n  name: \"note\",\r\n  initialState: {\r\n    note: [\r\n      {\r\n        content: \"note 1 content\",\r\n        color: \"red\",\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addNewNote: (state, data) => {\r\n      state.note.push(data.payload);\r\n    },\r\n    \r\n  },\r\n\r\n});\r\n\r\nexport default noteSlice.reducer;\r\nexport const { addNewNote } = noteSlice.actions;\r\nexport const { filterNote } = noteSlice.actions;","/* eslint-disable react/jsx-no-duplicate-props */\r\nimport React from \"react\";\r\nimport { addNewNote } from \"./redux/note/noteSlice\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, CardTitle, Input, Label, Button } from \"reactstrap\";\r\nfunction InputText() {\r\n    const [takenote, settakenote] = useState(\"\");\r\n    const [cols, setcols] = useState(\"\");\r\n    \r\n  \r\n    const dispatch = useDispatch();\r\n    const handleSubmit = (e) => {\r\n      dispatch(addNewNote({ content: takenote, color: cols }));\r\n  \r\n      e.preventDefault();\r\n    };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <CardTitle>Note</CardTitle>\r\n        <Card style={{ height: \"250px\" }}>\r\n          <Input\r\n            className={\r\n              cols === \"red\" ? \"red\" : cols === \"blue\" ? \"blue\" : \"dark\"\r\n            }\r\n            type=\"button\"\r\n            value={takenote}\r\n            onChange={(e) => settakenote(e.target.value)}\r\n            style={{ height: \"250px\" }}\r\n            id=\"exampleText\"\r\n            name=\"text\"\r\n            type=\"textarea\"\r\n            placeholder=\"Note Al\"\r\n          />\r\n        </Card>\r\n        <Label htmlFor=\"colors\"></Label>\r\n        <Input\r\n          className=\"mx-2\"\r\n          style={{\r\n            backgroundColor: \"burlywood\",\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n          type=\"radio\"\r\n          name=\"colors\"\r\n          value=\"red\"\r\n          onChange={(e) => setcols(e.target.value)}\r\n        />\r\n        <Input\r\n          className=\"mx-2\"\r\n          style={{\r\n            backgroundColor: \"aquamarine\",\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n          type=\"radio\"\r\n          name=\"colors\"\r\n          value=\"blue\"\r\n          onChange={(e) => setcols(e.target.value)}\r\n        />\r\n        <Input\r\n          style={{\r\n            backgroundColor: \"darkgrey\",\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n          type=\"radio\"\r\n          name=\"colors\"\r\n          value=\"dark\"\r\n          onChange={(e) => setcols(e.target.value)}\r\n        />\r\n        <Button className=\"mt-2 mx-2 \" type=\"submit\">\r\n          Ekle\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputText;\r\n","import React from \"react\";\r\nimport { Card, CardTitle } from \"reactstrap\";\r\n\r\nfunction Note({ not }) {\r\n  return (\r\n    <>\r\n      <Card\r\n        className={\r\n          not.color === \"red\" ? \"red\" : not.color === \"blue\" ? \"blue\" : \"dark\"\r\n        }\r\n        type=\"button\"\r\n      >\r\n        <CardTitle className=\"text-center aling-item-center\">\r\n          {not.content}\r\n        </CardTitle>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","/* eslint-disable react/jsx-no-duplicate-props */\n\nimport { useSelector } from \"react-redux\";\n\nimport InputText from \"./InputText\";\nimport Note from \"./Note\";\nimport \"./app.css\";\nimport { Row, Col, Container,Input } from \"reactstrap\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const note = useSelector((state) => state.note.note);\n  const [filter, setfilter] = useState(\"\")\n  const filtered=note.filter((not)=>not.content.toLowerCase().includes(filter.toLowerCase()))\n  \n  \n  \n  return (\n    <Container>\n      <Row className=\"mt-5 mb-5\">\n        <Col xs=\"12\">\n          <Input value={filter} onChange={(e)=>setfilter(e.target.value)} placeholder=\"Ara...\"/>\n          <InputText /> \n        </Col>\n      </Row>\n      <Row>\n        {filtered.map((not, key) => (\n          <Col key={key} xs=\"3\">\n            <Note not={not} />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport noteSlice  from \"./note/noteSlice\";\r\n\r\nexport const store =configureStore({\r\n    reducer:{\r\n      note:noteSlice\r\n    }\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport { store } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> \n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}